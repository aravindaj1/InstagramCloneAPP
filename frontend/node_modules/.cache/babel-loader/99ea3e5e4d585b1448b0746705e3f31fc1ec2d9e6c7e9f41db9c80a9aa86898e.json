{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\HP\\\\frontend\\\\src\\\\components\\\\EmailVerification.js\",\n  _s = $RefreshSig$();\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useContext } from \"react\";\nimport { OTP } from \"../context/OTPverify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmailVerification() {\n  _s();\n  const navigate = useNavigate();\n  const [otp, setotp] = useContext(OTP);\n  const generateOTP = () => {\n    const random = Math.random();\n    return Math.floor(100000 + random * (999999 - 100000));\n  };\n  const submitHandler = async (values, setSubmitting) => {\n    var otpass = String(generateOTP());\n    var status = await axios.post('http://localhost:8081/sendEmail', {\n      to: values.email,\n      subject: \"Email verification\",\n      text: \"Your One time Password is generated\",\n      html: '<div style=\"text-align:center;border-radius:5px;box-shadow:5px 5px 5px black;background-color:white;padding:10px\"><p>Here is your One Time Password to signup</p><b style=\"color:blue\">' + otpass + '</b><p>Copy the above password and paste it on the verify page</p><p><b>Note:</b>Your OTP will expire if you refresh the verification page</p> </div>'\n    });\n    if (status.data === \"success\") {\n      setotp([otpass, values.email]);\n      navigate('/otpverification');\n    } else {\n      alert(\"Could not send email\");\n    }\n  };\n  const validator = async values => {\n    const errors = {};\n    var users = await axios.get('http://localhost:8081/getall');\n    if (!values.email) {\n      errors.email = \"Required\";\n    } else if (values.email.indexOf(\"@\") < 0 || values.email.indexOf(\"@\") > values.email.lastIndexOf(\".\")) {\n      errors.email = \"Invalid email address\";\n    }\n    if (!values.email) errors.email = \"Please add an email\";\n    var user = users.data.filter(u => u.email === values.email);\n    if (user.length > 0) errors.email = \"Email already exists\";\n    return errors;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"180px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"black\",\n        margin: \"10px auto\",\n        textAlign: \"center\",\n        width: \"18rem\",\n        color: \"white\",\n        padding: \"5px\",\n        borderRadius: \"5px\"\n      },\n      children: \"Verify Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\"\n      },\n      onSubmit: submitHandler,\n      validate: validator,\n      children: _ref => {\n        let {\n          isSubmitting\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          class: \"card bg-secondary\",\n          style: {\n            width: \"18rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: \"10px auto\",\n              textAlign: \"center\",\n              color: \"white\"\n            },\n            children: \"Verify email to create new account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              class: \"form-control\",\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"Enter email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              class: \"form-text text-muted\",\n              name: \"email\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            class: \"btn btn-dark\",\n            disabled: isSubmitting,\n            children: \"Send Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: \"10px auto\",\n        textAlign: \"center\"\n      },\n      children: \"Please check your email before submitting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: \"10px auto\",\n        textAlign: \"center\"\n      },\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: '/login',\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 13\n  }, this);\n}\n_s(EmailVerification, \"17xaOWZ8IovsahPLMPodoOzsBMU=\", false, function () {\n  return [useNavigate];\n});\n_c = EmailVerification;\nvar _c;\n$RefreshReg$(_c, \"EmailVerification\");","map":{"version":3,"names":["ErrorMessage","Field","Form","Formik","Link","useNavigate","axios","useContext","OTP","jsxDEV","_jsxDEV","EmailVerification","_s","navigate","otp","setotp","generateOTP","random","Math","floor","submitHandler","values","setSubmitting","otpass","String","status","post","to","email","subject","text","html","data","alert","validator","errors","users","get","indexOf","lastIndexOf","user","filter","u","length","style","marginTop","children","backgroundColor","margin","textAlign","width","color","padding","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","onSubmit","validate","_ref","isSubmitting","class","type","name","placeholder","component","disabled","_c","$RefreshReg$"],"sources":["C:/Projects/HP/frontend/src/components/EmailVerification.js"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport { Link, useNavigate } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { useContext } from \"react\";\r\nimport { OTP } from \"../context/OTPverify\"\r\n\r\nexport default function EmailVerification(){\r\n    const navigate=useNavigate()\r\n    const [otp,setotp]=useContext(OTP)\r\n\r\n    const generateOTP=()=>{\r\n        const random = Math.random()\r\n        return Math.floor(100000 + random * (999999 - 100000))\r\n    }\r\n\r\n    const submitHandler = async(values, setSubmitting) => {\r\n        var otpass=String(generateOTP())\r\n        \r\n        var status=await axios.post('http://localhost:8081/sendEmail',{\r\n            to:values.email,\r\n            subject:\"Email verification\",\r\n            text:\"Your One time Password is generated\",\r\n            html:'<div style=\"text-align:center;border-radius:5px;box-shadow:5px 5px 5px black;background-color:white;padding:10px\"><p>Here is your One Time Password to signup</p><b style=\"color:blue\">'+otpass+'</b><p>Copy the above password and paste it on the verify page</p><p><b>Note:</b>Your OTP will expire if you refresh the verification page</p> </div>'\r\n        })\r\n        if(status.data===\"success\"){\r\n            setotp([otpass,values.email])\r\n            navigate('/otpverification')\r\n        }\r\n        else{\r\n            alert(\"Could not send email\")\r\n        }\r\n        \r\n    }\r\n\r\n    const validator=async(values)=>{\r\n        const errors={}\r\n        var users=await axios.get('http://localhost:8081/getall')\r\n\r\n        if (!values.email){\r\n            errors.email = \"Required\";\r\n        }\r\n        else if (\r\n           values.email.indexOf(\"@\")<0 || values.email.indexOf(\"@\")>values.email.lastIndexOf(\".\")\r\n        ){\r\n            errors.email = \"Invalid email address\";\r\n        }\r\n\r\n        if(!values.email) errors.email=\"Please add an email\"\r\n    \r\n        var user=users.data.filter((u)=>u.email===values.email)\r\n        if(user.length>0) errors.email=\"Email already exists\"\r\n\r\n        return errors\r\n    }\r\n\r\n\r\n    return (<div style={{marginTop:\"180px\"}}>\r\n\r\n        <div style={{backgroundColor:\"black\",margin:\"10px auto\",textAlign:\"center\",width:\"18rem\",color:\"white\",padding:\"5px\",borderRadius:\"5px\"}}>\r\n            Verify Email\r\n        </div>\r\n\r\n        <Formik initialValues={{email:\"\"}} onSubmit={submitHandler} validate={validator}>\r\n        {({ isSubmitting }) =>(\r\n            <Form class=\"card bg-secondary\" style={{width:\"18rem\"}}>\r\n                <p style={{margin:\"10px auto\",textAlign:\"center\",color:\"white\"}}>Verify email to create new account</p>\r\n                <div class=\"form-group\">\r\n                    <Field class=\"form-control\" type=\"email\" name=\"email\" placeholder=\"Enter email address\"/>\r\n                    <ErrorMessage class=\"form-text text-muted\" name=\"email\" component=\"div\" />\r\n                </div>\r\n\r\n                <button type=\"submit\" class=\"btn btn-dark\" disabled={isSubmitting} >\r\n                    Send Email\r\n                </button> \r\n             \r\n            </Form>\r\n        )}\r\n        </Formik>\r\n        <p style={{margin:\"10px auto\",textAlign:\"center\"}}>Please check your email before submitting</p>\r\n        <p style={{margin:\"10px auto\",textAlign:\"center\"}}>\r\n            Already have an account? <Link to={'/login'}>Login</Link>\r\n        </p>\r\n    </div>)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}