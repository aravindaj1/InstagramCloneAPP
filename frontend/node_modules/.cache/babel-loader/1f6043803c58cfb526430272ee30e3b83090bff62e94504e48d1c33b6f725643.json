{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\HP\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useState } from \"react\";\nimport Popup from \"./Popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const navigate = useNavigate();\n  const [popup, setPopup] = useState({\n    isOpen: false,\n    content: ''\n  });\n  const submitHandler = async (values, setSubmitting) => {\n    var user = await axios.post('http://localhost:8081/user', values);\n    if (user.data.password !== values.password) alert('Invalid password');else {\n      var ouser = await axios.post('http://localhost:8081/login', values);\n      localStorage.setItem('user', JSON.stringify(ouser.data));\n      setPopup({\n        isOpen: true,\n        content: 'Logged in successfully'\n      });\n      setTimeout(() => {\n        setPopup({\n          isOpen: false,\n          action: '',\n          content: ''\n        });\n      }, 1000);\n      navigate('/');\n    }\n  };\n  const validator = async values => {\n    const errors = {};\n    var users = await axios.get('http://localhost:8081/getall');\n    if (!values.userid) errors.userid = \"Please enter User ID\";\n    if (!values.password) errors.password = \"Please enter password\";\n    var user = users.data.filter(u => u.userid === values.userid);\n    if (user.length < 1) errors.userid = \"UserID doesn't exist\";\n    return errors;\n  };\n  const handleClosePopup = () => {\n    setPopup({\n      isOpen: false,\n      action: '',\n      content: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"230px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"black\",\n        margin: \"10px auto\",\n        textAlign: \"center\",\n        width: \"18rem\",\n        color: \"white\",\n        padding: \"5px\",\n        borderRadius: \"5px\"\n      },\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        password: \"\",\n        userid: \"\"\n      },\n      onSubmit: submitHandler,\n      validate: validator,\n      children: _ref => {\n        let {\n          isSubmitting\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          class: \"card bg-secondary\",\n          style: {\n            width: \"18rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              class: \"form-control\",\n              type: \"text\",\n              name: \"userid\",\n              placeholder: \"Enter User ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              class: \"form-text text-muted\",\n              name: \"userid\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              class: \"form-control\",\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Enter Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              class: \"form-text text-muted\",\n              name: \"password\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            class: \"btn btn-dark\",\n            disabled: isSubmitting,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: \"10px auto\",\n        textAlign: \"center\"\n      },\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: '/emailverification',\n        children: \" Sign Up \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      isOpen: popup.isOpen,\n      onClose: handleClosePopup,\n      content: popup.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 13\n  }, this);\n}\n_s(Login, \"x1EzmI/5tXawdbdHo06/YcZX4PE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["ErrorMessage","Field","Form","Formik","Link","useNavigate","axios","useState","Popup","jsxDEV","_jsxDEV","Login","_s","navigate","popup","setPopup","isOpen","content","submitHandler","values","setSubmitting","user","post","data","password","alert","ouser","localStorage","setItem","JSON","stringify","setTimeout","action","validator","errors","users","get","userid","filter","u","length","handleClosePopup","style","marginTop","children","backgroundColor","margin","textAlign","width","color","padding","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","onSubmit","validate","_ref","isSubmitting","class","type","name","placeholder","component","disabled","to","onClose","_c","$RefreshReg$"],"sources":["C:/Projects/HP/frontend/src/components/Login.js"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport { useState } from \"react\";\r\nimport Popup from \"./Popup\";\r\n\r\n\r\nexport default function Login(){\r\n    const navigate=useNavigate()\r\n    const [popup, setPopup] = useState({ isOpen: false, content: '' });\r\n\r\n    const submitHandler =async (values, setSubmitting) => {\r\n        var user=await axios.post('http://localhost:8081/user',values)\r\n        if(user.data.password!==values.password) alert('Invalid password')\r\n        else{\r\n            var ouser=await axios.post('http://localhost:8081/login',values)\r\n            localStorage.setItem('user',JSON.stringify(ouser.data));\r\n\r\n            setPopup({\r\n                isOpen: true,\r\n                content: 'Logged in successfully'\r\n              });\r\n        \r\n              setTimeout(() =>{\r\n                setPopup({ isOpen: false, action: '', content: '' })\r\n                \r\n            }, 1000)\r\n            navigate('/')\r\n        }\r\n    }\r\n    const validator=async(values)=>{\r\n        const errors={}\r\n        var users=await axios.get('http://localhost:8081/getall')\r\n        \r\n        if(!values.userid) errors.userid=\"Please enter User ID\"\r\n        if(!values.password) errors.password=\"Please enter password\"\r\n\r\n        var user=users.data.filter((u)=>u.userid===values.userid)\r\n        if(user.length<1) errors.userid=\"UserID doesn't exist\"\r\n        \r\n        return errors\r\n    }\r\n\r\n    const handleClosePopup = () => {\r\n        setPopup({ isOpen: false, action: '', content: '' });\r\n    }\r\n\r\n    return (<div style={{marginTop:\"230px\"}}>\r\n\r\n        <div style={{backgroundColor:\"black\",margin:\"10px auto\",textAlign:\"center\",width:\"18rem\",color:\"white\",padding:\"5px\",borderRadius:\"5px\"}}>\r\n            Login\r\n        </div>\r\n\r\n        <Formik initialValues={{password:\"\",userid:\"\"}} onSubmit={submitHandler} validate={validator}>\r\n        {({ isSubmitting }) =>(\r\n            <Form class=\"card bg-secondary\" style={{width:\"18rem\"}}>\r\n\r\n                <div class=\"form-group\" >\r\n                    <Field class=\"form-control\" type=\"text\" name=\"userid\" placeholder=\"Enter User ID\"/>\r\n                    <ErrorMessage class=\"form-text text-muted\" name=\"userid\" component=\"div\" />\r\n                </div>\r\n\r\n                <div class=\"form-group\" >\r\n                    <Field class=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Enter Password\"/>\r\n                    <ErrorMessage class=\"form-text text-muted\" name=\"password\" component=\"div\" />\r\n                </div>\r\n                \r\n                <button type=\"submit\" class=\"btn btn-dark\" disabled={isSubmitting}>\r\n                   Login\r\n                </button>\r\n            </Form>\r\n        )}\r\n        </Formik>\r\n        <p style={{margin:\"10px auto\",textAlign:\"center\"}}>\r\n            Don't have an account? <Link to={'/emailverification'}> Sign Up </Link>\r\n        </p>\r\n        <Popup isOpen={popup.isOpen} onClose={handleClosePopup} content={popup.content} />\r\n    </div>)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}